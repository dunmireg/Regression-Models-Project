library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
?splom()
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = .~factor(Month))
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = .~factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, faces = .~Month)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = .~factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = .~Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
.12*.2
.024/.2
?pnorm
pnorm(93,mean = 100, sd = 10)
.88*.95+.07*.05
.88*.95
.836/.8395
pnorm(95, mean = 100, sd = 10)
pnorm(95, mean = 100, sd = 10, lower.tail = FALSE)
qnorm(95, mean = 100, sd = 10)
qnorm(.95, mean = 100, sd = 10)
?pois
?ppois
?binom
?rbin
?rbinom
.8-.7
.1/.2
.7*.8
.8-.56
.24/.2
1-.52
.75*.3
.48*.7
.225+.336
.225/.561
?pnorm
pnorm(70, mean = 80, sd = 10)
qnorm(.95, mean = 1100, sd = 75)
qnorm(.95, mean = 1100, sd = 75/sqrt(100))
?pbinom
pbinom(3, size = 5, prob = 0.5, lower.tail = F)
sqrt(1/12)/sqrt(1000)
sqrt(1/12)
rpois
?rpois
ppois(10, labmda = 5*3)
ppois(10, lambda = 5*3)
?fact
?choose
choose(9, 3)
.8*.2
/.2
.16/.2
.1/.2
sqrt(1/12)
sqrt(1/12)/sqrt(1000)
sqrt(1/12)/sqrt(100)
a <- 1100
s <- 30
n <- 9
error <- qnorm(0.975) * s/sqrt(n)
left <- a - error
right <- a + error
-2/qnorm(0.975)
-2/qnorm(0.975) * 3
a <- -2
n <- 9
s <- .3
error <- qnorm(0.975) * s/sqrt(n)
a + error
a - error
s <- 1.5
error <- qnorm(0.975) * s/sqrt(n)
a + error
a - error
?qt()
x <- 0.6 + 0.68
x <- x/2
x <- (2*x)/20
x <- sqrt(x)
x * 2.093
-2 - 0.53
-2 + 0.53
sq <- sqrt(((10-1) * 0.6 + (10-1) * 0.68)/(10+10-2))
md <- 3-5
semd <- sp * sqrt(1/10 + 1/10)
semd <- sq * sqrt(1/10 + 1/10)
md + c(-1,1) * qt(0.975, 10 + 10 -2)*smd
md + c(-1,1) * qt(0.975, 10 + 10 -2)*semd
sq <- sqrt(((100-1) * 2^2 + (100-1) * .5^2)/(100+100-2))
md <- 6-4
semd <- sq * sqrt(1/100 + 1/100)
md + c(-1,1) * qt(0.975, 100 + 100 -2) * semd
sq <- sqrt(((9-1) * 1.5^2 + (9-1) * 1.8^2)/(9 + 9 -2))
md <- -3 - 1
semd <- sq* sqrt(1/9 + 1/9)
md + c(-1,1) * qt(.95, 9 + 9 -2) * semd
error <- qt(0.975, df = 8) * (30/sqrt(9))
1100 + error
1100 - error
error <- qt(0.975,df=8)*30/sqrt(9)
1100 + error
sd <- 2.10
error <- qt(0.975, df =8) * sd/sqrt(9)
-2 - error
-2 + error
sd <- .3
error <- qt(0.975, df =8) * sd/sqrt(9)
-2 - error
-2 + error
sd <- 2.60
error <- qt(0.975, df =8) * sd/sqrt(9)
-2 - error
-2 + error
mean <- 12
sd <- 4
z <- qnorm(0.05)
?qnorm
z <- qnorm(0.05, lower.tail = FALSE)
mu0 <- mn-z*s/sqrt(100)
mu0 <- mean-z*s/sqrt(100)
mn <- 12
s <- 4
mu0 <- mn-z*s/sqrt(100)
?t.tes
?t.test
baseline = c(140, 138, 150, 148, 135)
week2 = c(132, 135, 151, 146, 130)
p <- t.test(baseline, week2, paired = FALSE, alternative = "two.sided", var.equal = FALSE)$p.value
p <- t.test(baseline, week2, paired = FALSE, alternative = "two.sided", var.equal = TRUE)$p.value
?pt
?t.test
p <- t.test(baseline, week2, paired = TRUE, alternative = "two.sided", var.equal = FALSE)$p.value
p <- t.test(baseline, week2, paired = TRUE, alternative = "two.sided", var.equal = TRUE)$p.value
qt(p = 0.025, df = 8)
qt(p = 0.025, df = 99)
3.0 - -1.984
?qt
qt(p = 0.025, df = 8, lower.tail = FALSE)
qt(p = 0.025, df = 99, lower.tail = FALSE)
3.0 - 1.98
3 + 1.98
rm(list = ls())
avg <- 1100
sdev <- 30
n <- 9
error <- qt(0.975, df = n-1) * sdev/sqrt(n)
left <- avg - error
right <- avg + error
left
right
?pbinom
pbinom(2, probl = 0.5, size = 4, lower.tail = FALSE)
pbinom(2, prob = 0.5, size = 4, lower.tail = FALSE)
rm(list = ls())
1/100
?ppois
(1/100) * 1787
ppois((10/1787), lambda = 17.81)
ppois((10/1787), lambda = 17.81, lower.tail = FALSE)
ppois((10/1787), lambda = 17.87)
ppois((10/1787), lambda = 17.87, lower.tail = FALSE)
ppois(10 + 1, lambda = 17.87)
ppois(10 + 1, lambda = 17.87, lower.tail = FALSE)
ppois(10, lambda = 17.87)
a = 0.05
df = 9-1 + 9-1
ss1 <- (1.5)2*8
ss1 <- (1.5)^2*8
ss2 <- (1.8)^2 * 8
1.5 ^ 2
* 8
2.25 * 8
sp <- (18 + 25.92)/(8 + 8)
sp
2.745/8
x <- 2 * (2.745/6)
x <- 2 * (2.745/8)
t <- (-3 - 1)/sqrt(x)
pt(t, 16)
.04/10
0.01/.004
1.66-2.5
pnorm(-0.84, lower.tail = FALSE)
pnorm(10 + qnorm(0.95) * (.04/10), mean = 0.01, sd = .004, lower.tail = FALSE)
pnorm(10 + qnorm(0.95) * (.04/10), mean = 0.01, sd = .04, lower.tail = FALSE)
n <- (qnorm(.95) + qnorm(.9)) ^ 2 * .04^2 / 0.01^2
rm(list = ls())
SS1 <- 12^2(287)
SS1 <- 12^2 * (287)
SS2 <- 12^2 * 287
sp = (SS1 + SS2)/(287 + 287)
t <- (44-42.04)/(sqrt(144/288 + 144/288))
?pt
pt(t, df = 288 + 288 -2)
pt(t, df = 288 + 288 -2, lower.tail = FALSE)
0.05/10
X <- 2*0.18 + 1 * -1.54 + 3 * 0.42 + 1 * 0.95
X/7
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
z <- sum(X*y)
a <- sum(x^2)
z/a
plot(x,y)
sum(x*y)/sum(x^2)
library(datasets)
data(mtcars)
?lm
fit <- lm(mtcars$mpg ~ mtcars$weight)
attributes(mtcars)
fit <- lm(mtcars$mpg ~ mtcars$wt)
lm(forumla = mctars$mpg ~ mtcars$wt)
fot
fit
1/.5
4/2
1.5*.4
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mx <- mean(x)
sx <- sd(x)
(8.58-mx)/sx
rm(list = ls())
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x)
fit
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
fit <- lm(x ~x)
fit <- lm(x ~ x)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62);
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y ~ x)
sumCoef <- summary(fit)$coefficients
View(sumCoef)
?summary
summary(fit)
summary(fit)$sigma
rm(list = ls())
data(mtcars)
names(mtcars)
fit <- lm(mtcars$mpg ~ mtcars$wt)
?predict
predict(fit, data.frame(x=mean(mtcars$wt)), interval = "confidence")
x = mtcars[,6]
new = data.frame(x=mean(x))
View(new)
mean(mtcars$wt)
predict(fit, mean(mtcars$wt), interval = "confidence")
predict(fit, new, interval = "confidence")
rm(list = ls())
data(mtcars)
y <- mtcars$mpg
x <- mtcars$wt
model <- lm(y~x)
newdata <- data.frame(x = mean(x))
predict(model, newdata, interval = ("confidence"))
predict(model, newdata, interval = "confidence")
model
fit <- lm(y ~ x_
)
fit <- lm(y ~ x)
fit
predict(fit, newdata, interval = "confidence")
?mtcars
newdata = data.frame(3000)
predict(fit, newdata, interval = "predict")
newdata = data.frame(3000)
predict(model, newdata, interval = "predict")
model
newdata = data.frame(x = 3)
predict(model, newdata, interval = "predict")
short.x = x/2
model2 <- lm(y ~ short.x)
confint(model2, "short.x", level = 0.95)
summary(model2)$coefficients
rm(list= ls())
data(mtcars)
x <- mtcars$wt
y <- mtcars$mpg
fit <- lm(y~x)
summary(fit)$coefficients
Intercept <- 37.285126
slope <- -5.344472
yhat1 <- x + Intercept
denom <- sum((y-yhat1)^2)
yhat2 <- slope*x + Intercept
numer <- sum((y-yhat2)^2)
numer/denom
denom/numer
denom2 <- sum(y-yhat1)^2
resid(fit)
z <- y-yhat1
z^2
z <- z^2
z <- sum(z)
library(ggplot2)
?binwidth
?geom_histogram
library(swirl)
swirl()
install_from_swirl("Regression Models")
swirl()
plot(child~parent, galton)
plot(jitter(child,4) ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd = 3, col = "red")
summary(regrline)
data(mtcars)
str(mtcars)
?mtcars
fit <- lm(mpg ~ wt + factor(cyl), data = mtcars)
fit$coefficients
6.071-4.256
fit2 <- lm(mpg ~ factor(cyl))
fit2 <- lm(mpg ~ factor(cyl), data = mtcars)
fit2$coefficients
anova(fit, fit2)
anova(fit2, fit)
fit3 <- lm(mpg ~ wt + factor(cyl) + I(wt * factor(cyl)), data = mtcars)
fit3 <- lm(mpg ~ wt + factor(cyl) + I(wt * cyl), data = mtcars)
anova(fit, fit3)
fit <- lm(factor(cyl) + wt, data = mtcars)
fit <- lm(mpg ~ factor(cyl) + wt, data = mtcars)
fit2 <- lm(mpg ~ factor(cyl) * wt, data = mtcars)
anova(fit, fit2)
fit2 <- lm(mpg ~ factor(cyl) + wt + factor(cyl)*wt, data = mtcars)
anova(fit, fit2)
?anova
fit <- lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
fit$coefficients
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
model <- lm(y~x)
model2 <- influence(model)
model2$hat
model2$coefficients
hatvalues(model){1:5}
hatvalues(model)[1:5]
?dfbetas
dfbetas(model)[5,2]
influence.measure(model)
influence.measures(model)
URL <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
destfile <- "./RepResPeerAssessment2"
download.file(URL, destfile)
download.file(URL, destfile, method = "curl")
setInternet2(use = TRUE)
download.file(URL, destfile)
URL <- "http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
download.file(URL, destfile)
destfile <- "./RepResPeerAssessment2/data"
download.file(URL, destfile)
RSiteSearch("hash")
data <- c("HURRICANE BOB", "HURRICANE MARY", "HAROLD THE HAPPY STORM")
data[grep("*HURRICANE*", data)] <- "HURRICANE"
?pattern
?grep
?regex
data[grep("HURRICANE", data)] <- "HURRICANE"
data
data(mtcars)
names(mtcars)
head(mtcars$am)
str(mtcars)
?boxplot
boxplot(mpg ~ factor(am), data = mtcars)
mtcars$am <- as.factor(mtcars$am)
?levels
levels(mtcars$am) <- c("Automatic", "Manual")
boxplot(mpg ~ am, data = mtcars, xlab = "Transmission Type", ylab = "MPG", main = "MPG Distribution by Transmission")
?aggregate
x <- aggregate(mtcars$mpg, by = list(mtcars$am), FUN = mean)
x
fit <- lm(mpg~am, data = mtcars)
fit$coef
summary(fit)
?cor
cor(mtcars$mpg, mtcars)
cor(mtcars$mpg, mtcars[,-9])
plot(x = mtcars$am, y = mtcars$mpg)
plot(y = mtcars$mpg)
?scatterplot
fit$coefficients
fit$coefficients[,1]
class(fit$coefficients)
type(fit$coefficients)
fit
fit 2 <- update(fit, mpg ~ am + cyl)
fit2 <- update(fit, mpg ~ am + cyl)
fit3 <- update(fit, mpg ~ am + cyl + disp)
fit4 <- update(fit, mpg ~ am + cyl + disp + hp)
?mtcars
fit5 <- update(fit, mpg ~ am + cyl + disp + hp + drat)
fit6 <- update(fit, mpg ~ am + cyl + disp + hp + drat + wt)
fit7 <- update(fit, mpg ~ am + cyl + disp + hp + drat + wt + qsec)
fit8 <- update(fit, mpg ~ am + cyl + disp + hp + drat + wt + qsec + vs)
fit9 <- update(fit, mpg ~ am + cyl + disp + hp + drat + wt + qsec + vs + gear)
fit10 <- update(fit, mpg ~ am + cyl + disp + hp + drat + wt + qsec + vs + gear + carb)
anova(fit, fit2, fit3, fit4, fit5, fit6, fit7, fit8, fit9, fit10)
?step
bestfit <- step(lm(mpg~., data = mtcars), trace = 0, steps = 100000, direction = "both")
bestfit
summary(bestfit)
bestfit2 <- update(bestfit, mpg ~ wt + qsec + am + cyl)
anova(bestfit, bestfit2)
?mtcars
bestfit2 <- update(bestfit, mpg ~ wt + qsec + am + hp)
anova(bestfit, bestfit2)
?step
bestfit2 <- lm(mpg ~ wt + qsec + am + wt*qsec*am, data = mtcars)
anova(bestfit, bestfit2)
summary(bestfit2)
bestfit3 <- lm(mpg ~ wt + qsec + am + wt*qsec, data = mtcars)
anova(bestfit2, bestfit3)
summary(bestfit3)
anova(bestfit, bestfit2)
summary(bestfit2)
bestfit2$coefficients
bestfit$coefficients
bestfit3 <- update(bestfit, mpg ~ wt + qsec + am + wt*qsec)
bestfit4 <- update(bestfit, mpg ~ wt + qsec + am + wt * am)
bestfit5 <- update(bestfit, mpg ~ wt + qsec + am + qsec * am)
anova(bestfit, bestfit2, bestfit3, bestfit4, bestfit5)
anova(bestfit2, bestfit3)
anova(bestfit3, bestfit2)
summary(bestfit3)
summary(bestfit4)
summary(bestfit5)
anova(bestfit2, bestfit4)
anova(bestfit, bestfit3, bestfit4, bestfit5)
anova(bestfit, bestfit3)
anova(bestfit, bestfit4)
anova(bestfit, bestfit5)
?anova
anova(bestfit, bestfit2)
anova(bestfit, bestfit4)
?vif
cor(mpg)
rm(list = ls())
data(mtcars)
mtcars$am <- as.factor(mtcars$am)
levels(mtcars$am) <- c("Automatic", "Manual")
?mtcars
fit <- lm(mpg ~ am, data = mtcars)
fit2 <- update(fit, mpg ~am + cyl)
fit2 <- update(fit, mpg ~am + wt)
fit3 <- update(fit, mpg ~am + wt + qsec)
fit4 <- update(fit, mpg ~ am + wt + qsec + cyl)
fit5 <- update(fit, mpg ~ am + wt + qsec + cyl + disp)
anova(fit, fit2, fit3, fit4, fit5)
fit6 <- update(fit, mpg ~ am + wt + qsec + cyl + disp + hp)
fit7 <- update(fit, mpg ~ am + wt + qsec + cyl + disp + hp + drat)
fit8 <- update(fit, mpg ~ am + wt + qsec + cyl + disp + hp + drat + vs)
fit9 <- update(fit, mpg ~ am + wt + qsec + cyl + disp + hp + drat + vs + gear)
fit10 <- update(fit, mpg ~ am + wt + qsec + cyl + disp + hp + drat + vs + gear + carb)
anova(fit, fit2, fit3, fit4, fit5, fit6, fit7, fit8, fit9, fit10)
summary(fit3)
bestfit <- lm(mpg ~ am + wt + qsec + wt*am, data = mtcars)
summary(bestfit)
plot(bestfit3)
plot(fit3)
par = mfrow(2,2)
par(mfrow = c(2,2))
plot(fit3)
nrow(mtcars)
?mtcars
avg(mtcars$wt)
mean(mtcars$wt)
install.packages("knitr")
library(knitr)
setwd("./Regression Models Project")
knit2pdf("Automatic vs Manual MPG Regression Models.Rmd")
summary(fit3)
bestfit <- update(fit, mpg ~ am + wt + qsec + am * wt)
bestfit2 <- update(fit, mpg ~ am + wt + qsec + am * qsec)
bestfit3 <- update(fit, mpg ~ am + wt + qsec + wt*qsec)
bestfit4 <- update(fit, mpg ~ am + wt + qsec + am * qsec * wt)
anova(bestfit, bestfit2, bestfit3, bestfit4)
anova(fit, bestfit)
anova(fit, bestfit, bestfit2, bestfit3, bestfit4)
anova(fit, bestfit2)
anova(bestfit, bestfit2)
summary(bestfit)
summary(bestfit2)
summary(bestfit3)
summary(bestfit4)
summary(fit)
summary(fit3)
par(mfrow = c(2,2))
plot(bestfit)
mean(mtcars$wt)
14.079 - 4.141 * mean(mtcars$wt)
